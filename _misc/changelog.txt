Changes at 3.1.4
================

<all> 
	Retire the Singleton usage for AppContext, AppDB, AppLogger, AuthorArticle and TemplateBuilder.
	This is just getting too messy and there are too many side effects.  These are now single object
    classes where this constraint is enforced through only doing one "new" per object and passing 
	explicit dependency parameters. 

functions.php -> Dispatcher
	A consequence of this is that a static __autoloader() can no longer access the AppContext object.
	So I have bowed to the invitable and decided to move the autoload functionality into Dispatcher.
	There's so little left in functions that I may as well take this opportunity to move to a full 
    class-based model and get rid of the functions entirely. 

TBD sort out static sync

TBD Sort out comment notification

TBD Daily "cron" job

Changes at 3.1.3
================

<all>Page
	Add the appropriate "##requires class TemplateEN_<tempatename>" if that page requires it.  This 
	ensures that the template will be prepended to the cached version, removing one scriptfile load.

AppContext
	Make the includeDir and cacheDir configuration parameters options and tidy up related code.
 	Add support for AppLogger

AppDB
	Add support for keyed array parameters in the dynamic DB calls.  This extra funtionality 
    facilitates "UPDATE xxx SET <dynamic list>  WHERE ..." which were previously the only types of 
    SQL call in the application which couldn't / didn't used this encapsulation

    Add support for loggin of all D/B queries.

AuthorArticle
	Use new DB dynamic parameter feature to replace query() with new updateArticle() call.

AlbumPage
	PRG to do

Dispatcher
	Now initiates the AppLogger

PhotoPage
    deletePhoto() now by ID
	PRG to and remain to ImagePage

SearchPage
	Immutable so PRG optional

Sync
	Use new DB dynamic parameter feature to replace query() with new updateArticle() call.

functions.php
	Add support for AppLogger in debugMsg()

index.php
	Add Doxygen comments

Changes at 3.1.2
================

AppContext
	includeDir is now a search list.
	I am moving to a strict Post/Redirect/Get model and this means that we need some form of 
	lightweight session context to pass messaging info from the POST to the following GET. This
    is implemented through the new getMessage() and setMessage() functions.

DefaultBuilder and AppSourceUtils
	Now use includeDir search list to scan for autoload files allowing a directory hierachy to be 
    implemented for the included directories.

TextlocalSMS added
	Sends SMS SMS using the TextLocal service.

Page
	Page::invalidPage() now issues a 404 instead of an extended error in the case of an invalid 
	request if $cxt->remoteServer is blank (i.e. this is a production instance).

AdminPage
	Implement Post/Redirect/Get model for all POSTs and add get/setMessage() support for error 
	handling and notification.

ArticlePage and AuthorArticle
	Implement Post/Redirect/Get model for all POSTs and add get/setMessage() support for error 
	handling and notification.

Changes at 3.1.0 + 3.1.1
========================

AdminPage, Sync
	Fix correct return of sync status codes

AppContext
	Add Raw post parameter type, user used by Sync::server.  $a->requestCount now set as count( $_GET )
    + count( $_POST ) as $_REQUEST includes $_COOKIE elements by default.

AdminPage, ArticlePage, AuthorArticle, PhotoPage, Page
	Add Page::setLocation to issue correct RFC-complianty Location: headers and replace header
    calles in pages which use this.

AppDB
    Replace query "SELECT TABLE_NAME AS name FROM information_schema.tables WHERE TABLE_SCHEMA='$db' 
    AND TABLE_NAME LIKE '{$this->tablePrefix}%'" by a "SHOW TABLES LIKE '{$this->tablePrefix}%'" as
    the former took 2.5s and the latter ~1mSed on the webfusion system !!

AuthorArticle
	Add TRUE return flag to the  $this->page->output( 'confirm_email', TRUE ) call 

Dispatcher
	Uses new pageTimer() for transaction microtiming
Page
	add setLocation() function which does an RFC conformant redirect.  Also update uses of 
	header( "Location:...) to use $this->setLocation()
	
functions.php
	Debug log destination is now a config paramter.
    pageTimer() now prints baseline "YYYY-MM-DD hh:mm:ss - Transaction timer set at 0 mSec" at first 
    call based on START_TIME.  Subsequent calls log mSec offset from the START_TIME.

index.php
	Add the define START_TIME constaining the start microtime()

screen.css, print.css 
	Delete and replace by all.css

all.css
	Which uses @media screen/print {} to combine the above an save a file load.

general
	Clean-up / remove redundant commented out error logging for debug.

doxfile
	Add generation of headers

_misc/introduction.txt
	Added new custom page to documentaion

TinyBuilder
	Remove and replace by symlink for tinymce_php_gzip.php

tiny_mce_gzip.php
	Bugfix to the version that I released to TinyMCE.  The document root should be based on the
    server variable SCRIPT_URL rather than SCRIPT_NAME so that the client-side is consistent
	with any rewrite strategy.

Changes at V3.0.10
==================
 
Class AbstractBuilder
	Shouldn't be abstract class -- replace by interface.  All Page sub-classes now "implements" 
	rather than "extends" Page.
Class AdminPage      
	Add purge, sync sidebar and update_config functions.  Sidebar customisation comes from 
	designated hidden article.
Class AppContext
	Add hidden options for parameters with "_" prefix
	HTML cacheable status hoisted to context calculation and set in HMTLcacheable parameter
	Add "A" type for parameters to allow array parameters in post.
	Rename "keywords" config parameter to "_keywords"
	Add "sidebarCustomID" and "_sidebarCustom" parameters.  sidebarCustomID desinates the
	hidden sidebar article, _sidebarCustom caches the custom content
Class ArchivePage
	Remove m and y parameters and replace by client-side javascript to allow HTML caching
	of archive page.
Class ArticlePage and class AuthorArticle
	Add header table to inline article edit function to allow update of article fields: 
	title, flag, keywords, date.
	**** need to remember: page HTML cache cleanup **** 
Class Dispatcher
	Builder prefix for functions remapped from unlinkDirFiles to getTranslation
Functions
	Remove debug error logging from __autoload()
	Remove function unlinkDirFiles
Class Page
	Add support for automatic issuing of "Content-Type" header.  Defaults to 
	"text/html; charset=UTF-8", but can be overridden by setting the contentType property
	Change parameters to output method in line with hoisting HTML caching to Context
	By default output() now issues Content-Type header and page content.
	(All sub-classes modified to use "implements" and output() method no longer echoed.
	unlinkDirFiles() and unlinkDirFiles() now Page methods
Class RssPage
	Rewritten to make blog RSS feed conform to RSS 2.0
Class Sitemap
	Base 3.0 implementation added.
Class Sync
	Use remoteServer config variable as sync destination
    **** Still have issues with sync to V2 setting flag=1
Class TemplateBuilder
	Add ability to escape uppercase word in substitution fields with a \ escapes to prevent 
	variable substition force interpretation as a literal, e.g. "\UTF-8" is interpreted as 
	"UTF-8" rather than \$varUTF-8
admin.html
	as per class Admin	
archive.html
	ar per class Archive
header.html
	remove "<?php echo '<?xml version="1.0" encoding="UTF-8"?>" as this forces MSIE8 into quirks mode -- durrhhh.
rss.blog.html
	As per class Rss 
search.html
	Tweaks + in screem.css to be compatible with MSIE8 standard mode dispaly rules
sitemap.html
	as per class  Sitemap
trailer.html
	Add support for hidden article as a container for localalused sdebar content.
